import numpy as np
import base64

data_off_6050 = """
0x555555556010: 71      86      -8      -66     -3      -5      -90     -5
0x555555556018: -89     -1      -14     -14     12      99      51      17
0x555555556020: 101     47      24      33      105     99      53      37
0x555555556028: 45      45      59      15      62      40      59      41
0x555555556030: 7       -110    -63     -86     102     82      50      84
0x555555556038: 66      66      93      108     100     73      117     63
0x555555556040: 1       1       0       -79     -75     -70     -70     -70
0x555555556048: -70     -70     -89     -89     -88     -88     -88     -85
0x555555556050: -85     -87     120     120     119     119     119     118
0x555555556058: 118     117     -60     -53     -52     -52     -51     -51
0x555555556060: -50     -49     -49     -49     48      48      49      49
0x555555556068: 50      51      58      56      57      -118    -118    -119
0x555555556070: -119    -119    -120    -120    -120    -120    89      91
0x555555556078: 91      91      89      89      89      39      39      87
0x555555556080: 87      75      72      72      73      73      78      78
0x555555556088: 79      75      -7      -7      -8      7       7       5
0x555555556090: 4       4       7       7       6       1       1       0
0x555555556098: 0       3       1       -80     -79     -79     -79     -70
0x5555555560a0: -70     -70     -70     -70     -23     -41     -41     -87
0x5555555560a8: -87     -87     120     120     119     119     119     118
0x5555555560b0: 118     -58     -58     -57     -59     -62     -62     -61
0x5555555560b8: -61     -64     -63     -63     -63     62      62      63
0x5555555560c0: 63      60      61      61      56      57      57      -118
0x5555555560c8: -119    -119    -119    -120    -120    -120    -120    -120
0x5555555560d0: 91      91      91      89      89      89      39      38
0x5555555560d8: 87      87      72      72      72      73      73      78
0x5555555560e0: 78      79      75      -7      -8      -8      7       7
0x5555555560e8: 5       4       4       7       7       6       1       1
0x5555555560f0: 0       0       3       3       -80     -79     -79     -79
0x5555555560f8: -66     -66     -70     -70     -21     -23     -23     -23
0x555555556100: -41     -41     120     120     119     119     119     118
0x555555556108: -63     -63     -60     -60     -59     -57     -64     -63
0x555555556110: -63     -62     -62     -63     -63     -63     62      62
0x555555556118: 63      60      62      63      63      56      59      59
0x555555556120: 59      -119    -119    -119    -120    -120    -120    -120
0x555555556128: -120    91      91      89      89      89      89      38
0x555555556130: 38      87      87      72      72      73      73      78
0x555555556138: 78      79      79      -7      -7      -8      -8      7
0x555555556140: 7       5       4       4       7       6       6       1
0x555555556148: 1       0       0       3       3       -80     -79     -79
0x555555556150: -79     -66     -66     -66     -66     -21     -21     -21
0x555555556158: -23     -23     -23     120     119     119     119     119
0x555555556160: -57     -57     -60     -62     -61     -61     -62     -62
0x555555556168: -61     -61     -109    -109    -110    -110    -110    109
0x555555556170: 60      61      62      62      63      63      56      58
0x555555556178: 59      59      62      -119    -119    -119    -120    -120
0x555555556180: -120    -120    -120    91      89      89      89      88
0x555555556188: 38      38      87      84      72      72      73      73
0x555555556190: 78      78      79      79      -5      -7      -8      7
0x555555556198: 7       7       5       4       7       7       6       6
0x5555555561a0: 1       1       0       0       3       3       3       -79
0x5555555561a8: -79     -79     -79     -66     -66     -66     -23     -23
0x5555555561b0: -21     -21     -21     -23     23      23      119     119
0x5555555561b8: 118     -59     -59     -58     -60     -59     -59     -60
0x5555555561c0: -60     -108    -105    -109    -110    -110    -110    -110
0x5555555561c8: 109     108     108     111     60      61      61      58
0x5555555561d0: 58      59      61      62      62      -119    -119    -120
0x5555555561d8: -120    -120    -120    -120    89      89      89      89
0x5555555561e0: 88      38      38      87      84      72      73      73
0x5555555561e8: 73      78      78      79      76      -5      -8      -8
0x5555555561f0: 7       7       7       6       4       7       7       6
0x5555555561f8: 6       1       1       0       0       3       3       3
0x555555556200: -79     -79     -79     -79     -66     -66     -66     -23
0x555555556208: -23     -23     -23     -21     -28     23      23      23
0x555555556210: 22      22      -57     -60     -60     -57     -57     -64
0x555555556218: -62     -108    -108    -105    -105    -106    -106    -106
0x555555556220: 105     105     104     104     107     107     59      59
0x555555556228: 60      60      61      61      62      56      56      -119
0x555555556230: -120    -120    -120    -120    -120    -120    89      89
0x555555556238: 88      38      38      38      37      84      72      73
0x555555556240: 73      78      78      79      79      -5      -5      -6
0x555555556248: -8      7       7       7       6       4       7       7
0x555555556250: 6       1       1       0       0       0       3       3
0x555555556258: 2       2       -79     -79     -79     -66     -66     -66
0x555555556260: -66     -17     -17     -23     -23     -26     23      23
0x555555556268: 23      22      22      57      58      58      -59     -59
0x555555556270: -62     -64     -112    -112    -109    -106    -106    -106
0x555555556278: -106    105     105     104     107     107     106     106
0x555555556280: 109     60      60      61      61      62      56      56
0x555555556288: 57      -120    -120    -120    -120    -120    -120    89
0x555555556290: 88      88      38      38      38      37      84      73
0x555555556298: 73      73      78      78      79      79      -5      -6
0x5555555562a0: -6      7       7       7       7       6       5       7
0x5555555562a8: 6       6       1       1       0       0       3       5
0x5555555562b0: 5       4       4       4       -75     -70     -70     -66
0x5555555562b8: -66     -66     -17     -17     -17     -32     -26     23
0x5555555562c0: 23      23      22      22      68      68      58      59
0x5555555562c8: 59      60      -62     -112    -109    -109    -110    -110
0x5555555562d0: -110    -110    109     104     104     107     107     106
0x5555555562d8: 106     109     109     59      59      59      56      56
0x5555555562e0: 56      57      -120    -120    -120    -120    -120    -120
0x5555555562e8: -120    88      88      38      38      37      37      84
0x5555555562f0: 85      73      78      78      79      79      76      -5
0x5555555562f8: -6      -6      5       7       7       6       6       5
0x555555556300: 5       6       6       1       1       0       0       3
0x555555556308: 3       5       4       4       4       4       -70     -70
0x555555556310: -70     -70     -70     -70     -17     -17     -32     -32
0x555555556318: -32     23      22      22      22      21      68      69
0x555555556320: 69      66      60      61      -116    -113    -109    -110
0x555555556328: -110    -110    109     109     108     108     111     111
0x555555556330: 110     110     109     109     59      59      59      56
0x555555556338: 56      56      59      59      -120    -120    -120    -120
0x555555556340: -120    -120    88      38      38      38      37      37
0x555555556348: 84      85      73      78      78      79      79      76
0x555555556350: -5      -6      -6      5       5       7       6       6
0x555555556358: 5       4       4       1       1       0       0       0
0x555555556360: 3       3       4       4       4       4       11      11
0x555555556368: -70     -70     -70     -70     -70     -70     -23     -26
0x555555556370: -32     -32     -32     22      22      22      21      21
0x555555556378: 71      71      64      66      67      67      -113    -114
0x555555556380: -114    -114    -114    109     109     108     111     111
0x555555556388: 110     110     105     105     104     104     57      58
0x555555556390: 58      58      58      59      59      -120    -120    -120
0x555555556398: -120    -120    -120    39      38      38      38      37
0x5555555563a0: 37      37      85      85      78      78      79      79
0x5555555563a8: 76      -3      -6      5       5       5       5       4
0x5555555563b0: 5       5       4       4       3       1       0       0
0x5555555563b8: 3       3       3       2       4       4       11      11
0x5555555563c0: 11      11      -70     -70     -70     -70     -70     -70
0x5555555563c8: -26     -26     -26     -26     -25     22      22      21
0x5555555563d0: 21      69      71      64      64      65      65      64
0x5555555563d8: -114    -114    -114    -114    113     112     112     115
0x5555555563e0: 111     110     110     105     105     104     104     59
0x5555555563e8: 58      58      58      59      59      59      -120    -120
0x5555555563f0: -120    -120    -120    -120    -120    38      38      38
0x5555555563f8: 37      37      37      85      85      78      78      79
0x555555556400: 79      76      -4      -4      5       5       5       4
0x555555556408: 4       7       5       4       4       3       3       0
"""

v21 = np.array([61, 58, -117, -118, -118, -118, -119, -119, -120, -120, -120, -120, 89, 86, 84, 84, 84, 86, 89, 89, 39, 86, 86, 87, 75, 75, 72, 72, 73, 73, 78, 78, 75, -7, -7, -8, 7, 7, 7, 5, 4, 7, 7, 6, 1, 1, 2, 2, 1, 1, 0, -79, -75, -70, -70, -70, -70, -70, -89, -89, -88, -88, -88, -85, -85, -87, 120, 120, 119, 119, 119, 118, 118, 117, -60, -53, -52, -52, -51, -51, -50, -49, -49, -49, 48, 48, 49, 49, 50, 51, 58, 56, 57, -118, -118, -119, -119, -119, -120, -120, -120, -120, 89, 91, 91, 91, 89, 89, 89, 39, 39, 87, 87, 75, 72, 72, 73, 73, 78, 78, 79, 75, -7, -7, -8, 7, 7, 5, 4, 4, 7, 7, 6, 1, 1, 0, 0, 3, 1, -80, -79, -79, -79, -70, -70, -70, -70, -70, -23, -41, -41, -87, -87, -87, 120, 120, 119, 119, 119, 118, 118, -58, -58, -57, -59, -62, -62, -61, -61, -64, -63, -63, -63, 62, 62, 63, 63, 60, 61, 61, 56, 57, 57, -118, -119, -119, -119, -120, -120, -120, -120, -120, 91, 91, 91, 89, 89, 89, 39, 38, 87, 87, 72, 72, 72, 73, 73, 78, 78, 79, 75, -7, -8, -8, 7, 7, 5, 4, 4, 7, 7, 6, 1, 1, 0, 0, 3, 3, -80, -79, -79, -79, -66, -66, -70, -70, -21, -23, -23, -23, -41, -41, 120, 120, 119, 119, 119, 118, -63, -63, -60, -60, -59, -57, -64, -63, -63, -62, -62, -63, -63, -63, 62, 62, 63, 60, 62, 63, 63, 56, 59, 59, 59, -119, -119, -119, -120, -120, -120, -120, -120, 91, 91, 89, 89, 89, 89, 38, 38, 87, 87, 72, 72, 73, 73, 78, 78, 79, 79, -7, -7, -8, -8, 7, 7, 5, 4, 4, 7, 6, 6, 1, 1, 0, 0, 3, 3, -80, -79, -79, -79, -66, -66, -66, -66, -21, -21, -21, -23, -23, -23, 120, 119, 119, 119, 119, -57, -57, -60, -62, -61, -61, -62, -62, -61, -61, -109, -109, -110, -110, -110, 109, 60, 61, 62, 62, 63, 63, 56, 58, 59, 59, 62, -119, -119, -119, -120, -120, -120, -120, -120, 91, 89, 89, 89, 88, 38, 38, 87, 84, 72, 72, 73, 73, 78, 78, 79, 79, -5, -7, -8, 7, 7, 7, 5, 4, 7, 7, 6, 6, 1, 1, 0, 0, 3, 3, 3, -79, -79, -79, -79, -66, -66, -66, -23, -23, -21, -21, -21, -23, 23, 23, 119, 119, 118, -59, -59, -58, -60, -59, -59, -60, -60, -108, -105, -109, -110, -110, -110, -110, 109, 108, 108, 111, 60, 61, 61, 58, 58, 59, 61, 62, 62, -119, -119, -120, -120, -120, -120, -120, 89, 89, 89, 89, 88, 38, 38, 87, 84, 72, 73, 73, 73, 78, 78, 79, 76, -5, -8, -8, 7, 7, 7, 6, 4, 7, 7, 6, 6, 1, 1, 0, 0, 3, 3, 3, -79, -79, -79, -79, -66, -66, -66, -23, -23, -23, -23, -21, -28, 23, 23, 23, 22, 22, -57, -60, -60, -57, -57, -64, -62, -108, -108, -105, -105, -106, -106, -106, 105, 105, 104, 104, 107, 107, 59, 59, 60, 60, 61, 61, 62, 56, 56, -119, -120, -120, -120, -120, -120, -120, 89, 89, 88, 38, 38, 38, 37, 84, 72, 73, 73, 78, 78, 79, 79, -5, -5, -6, -8, 7, 7, 7, 6, 4, 7, 7, 6, 1, 1, 0, 0, 0, 3, 3, 2, 2, -79, -79, -79, -66, -66, -66, -66, -17, -17, -23, -23, -26, 23, 23, 23, 22, 22, 57, 58, 58, -59, -59, -62, -64, -112, -112, -109, -106, -106, -106, -106, 105, 105, 104, 107, 107, 106, 106, 109, 60, 60, 61, 61, 62, 56, 56, 57, -120, -120, -120, -120, -120, -120, 89, 88, 88, 38, 38, 38, 37, 84, 73, 73, 73, 78, 78, 79, 79, -5, -6, -6, 7, 7, 7, 7, 6, 5, 7, 6, 6, 1, 1, 0, 0, 3, 5, 5, 4, 4, 4, -75, -70, -70, -66, -66, -66, -17, -17, -17, -32, -26, 23, 23, 23, 22, 22, 68, 68, 58, 59, 59, 60, -62, -112, -109, -109, -110, -110, -110, -110, 109, 104, 104, 107, 107, 106, 106, 109, 109, 59, 59, 59, 56, 56, 56, 57, -120, -120, -120, -120, -120, -120, -120, 88, 88, 38, 38, 37, 37, 84, 85, 73, 78, 78, 79, 79, 76, -5, -6, -6, 5, 7, 7, 6, 6, 5, 5, 6, 6, 1, 1, 0, 0, 3, 3, 5, 4, 4, 4, 4, -70, -70, -70, -70, -70, -70, -17, -17, -32, -32, -32, 23, 22, 22, 22, 21, 68, 69, 69, 66, 60, 61, -116, -113, -109, -110, -110, -110, 109, 109, 108, 108, 111, 111, 110, 110, 109, 109, 59, 59, 59, 56, 56, 56, 59, 59, -120, -120, -120, -120, -120, -120, 88, 38, 38, 38, 37, 37, 84, 85, 73, 78, 78, 79, 79, 76, -5, -6, -6, 5, 5, 7, 6, 6, 5, 4, 4, 1, 1, 0, 0, 0, 3, 3, 4, 4, 4, 4, 11, 11, -70, -70, -70, -70, -70, -70, -23, -26, -32, -32, -32, 22, 22, 22, 21, 21, 71, 71, 64, 66, 67, 67, -113, -114, -114, -114, -114, 109, 109, 108, 111, 111, 110, 110, 105, 105, 104, 104, 57, 58, 58, 58, 58, 59, 59, -120, -120, -120, -120, -120, -120, 39, 38, 38, 38, 37, 37, 37, 85, 85, 78, 78, 79, 79, 76, -3, -6, 5, 5, 5, 5, 4, 5, 5, 4, 4, 3, 1, 0, 0, 3, 3, 3, 2, 4, 4, 11, 11, 11, 11, -70, -70, -70, -70, -70, -70, -26, -26, -26, -26, -25, 22, 22, 21, 21, 69, 71, 64, 64, 65, 65, 64, -114, -114, -114, -114, 113, 112, 112, 115, 111, 110, 110, 105, 105, 104, 104, 59, 58, 58, 58, 59, 59, 59, -120, -120, -120, -120, -120, -120, -120, 38, 38, 38, 37, 37, 37, 85, 85, 78, 78, 79, 79, 76, -4, -4, 5, 5, 5, 4, 4, 7, 5, 4, 4, 3, 3, 0])

# Splitting the data into lines and then into individual numbers
lines = data_off_6050.strip().split('\n')
numbers = []
for line in lines:
    _, values = line.split(':', 1)
    numbers.extend([int(v) for v in values.split()])

# Converting to numpy array
off_6050 = np.array(numbers)

print(len(off_6050))
print(len(v21))

def xor_operation(off_6050, v21):
    for index in range(1024):
        off_6050[index] ^= v21[index]
    return off_6050

result = xor_operation(off_6050, v21)
print(result)

def array_to_string(int_array):
    byte_array = bytearray(int_array)
    return byte_array.decode('ascii')

print(array_to_string(result))

# answer_string = "zls4wq/r/wzzU5gE1yAxN5crffsGwaugLk8RaU5QFEZjeHw="